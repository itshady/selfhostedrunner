name: Go Build and Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  WORKSPACE: ${{ github.workspace }}

jobs:
  build:
    runs-on: self-hosted
    # defaults:
    #   run:
    #     working-directory: ${{ github.workspace }}
    outputs:
      status_code: ${{ steps.ping.outputs.status_code }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      - name: Build
        run: |
          pwd
          cd $env:WORKSPACE
          go build

      - name: Run Executable
        run: |
          cd $env:WORKSPACE
          ./selfhostedrunner.exe
      
      # - name: Install dependency
      #   run: |
      #     cd $env:WORKSPACE
      #     npm install wait-on

      # npx wait-on tcp:3000 --timeout 60s -v
      - name: Ping port 8080
        id: ping
        run: |
          $uri = "http://localhost:8080"
          $body = $env:GITHUB_ACTOR
          $response = Invoke-WebRequest -Uri $uri -Method POST -Body $body -UseBasicParsing
          $status_code = $response.StatusCode
          echo "info: $status_code"
          echo "status_code=2" >> $GITHUB_OUTPUT
          echo "::set-output name=status_code::$status_code"
      
      - name: Get information on port
        id: pong
        run: |
          echo "var: ${{ steps.ping.outputs.status_code }}"
          echo "Information Returned from Test: ${{ steps.ping.outputs.status_code }}"

      - name: Set outputs
        id: vars
        run: echo "::set-output name=produc_tion::2"

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.produc_tion }}

      # - name: Cleanup
      #   if: success() || failure()
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: test-results
      #     path: app/build
