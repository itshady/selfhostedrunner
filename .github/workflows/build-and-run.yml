name: Go Build and Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  WORKSPACE: ${{ github.workspace }}

jobs:
  build-and-run:
    runs-on: self-hosted
    # defaults:
    #   run:
    #     working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build
        run: |
          pwd
          cd $env:WORKSPACE
          go build

      - name: Run Executable
        run: |
          cd $env:WORKSPACE
          ./selfhostedrunner.exe
      
      - name: Install dependency
        run: |
          cd $env:WORKSPACE
          npm install wait-on

      - name: Ping port 8080
        run: |
          npx wait-on tcp:8085
          Invoke-WebRequest -Uri http://localhost:8080 -Method POST -Body "$env:GITHUB_ACTOR"

      - name: Get information on port
        run: |
          info=$(curl -s http://localhost:8085/health)
          echo "Information Returned from Test: $info"
        # echo "Health Information" >> $GITHUB_ENV
        # echo "$health_info" >> $GITHUB_ENV

      - name: Set outputs
        id: vars
        run: echo "::set-output name=production::true"

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.production }}

      # - name: Cleanup
      #   if: success() || failure()
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: test-results
      #     path: app/build

  wait-on-reply:
    runs-on: self-hosted
    # needs: build-and-run

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install dependency
        run: |
          cd $env:WORKSPACE
          npm install wait-on

      - name: Wait on
        # uses: ./
        # with:
        #   working-directory: $env:WORKSPACE
        #   start: npm run start:test & ./node_modules/.bin/wait-on http://localhost:3000 --timeout 120000 -v
        #   wait-on: 'http://localhost:8081'
        #   wait-on-timeout: 60
        run: npx wait-on http://localhost:8085 --timeout 60s -v
      
      - name: Get information on port
        run: |
          info=$(curl -s http://localhost:8085/health)
          echo "Information Returned from Test: $info"
        # echo "Health Information" >> $GITHUB_ENV
        # echo "$health_info" >> $GITHUB_ENV