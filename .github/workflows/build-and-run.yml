name: Go Build and Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  WORKSPACE: ${{ github.workspace }}

jobs:
  build-and-run:
    runs-on: self-hosted
    # defaults:
    #   run:
    #     working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      - name: Build
        run: |
          pwd
          cd $env:WORKSPACE
          go build

      - name: Run Executable
        run: |
          cd $env:WORKSPACE
          ./selfhostedrunner.exe
      
      # - name: Install dependency
      #   run: |
      #     cd $env:WORKSPACE
      #     npm install wait-on

      # npx wait-on tcp:3000 --timeout 60s -v
      - name: Ping port 8080
        run: |
          $env:info=(Invoke-WebRequest -Uri http://localhost:8080 -Method POST -Body "$env:GITHUB_ACTOR" -UseBasicParsing).StatusCode
          echo "status_code=$info" >> $env:GITHUB_OUTPUT
          echo "::set-output name=production::$env:info"
      
      - name: Get information on port
        run: |
          echo "Information Returned from Test: ${{ steps.vars.outputs.status_code }}"

      - name: Set outputs
        id: vars
        run: echo "::set-output name=production::true"

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.production }}

      # - name: Cleanup
      #   if: success() || failure()
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: test-results
      #     path: app/build
